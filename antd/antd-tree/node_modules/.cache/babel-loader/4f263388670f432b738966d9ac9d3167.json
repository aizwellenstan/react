{"ast":null,"code":"import _objectSpread from \"/Users/raphtalia/workspace/react/antd/antd-tree/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/Users/raphtalia/workspace/react/antd/antd-tree/src/index.js\";\nimport React, { PureComponent } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Table } from \"antd\";\nimport \"antd/dist/antd.css\";\nimport \"./styles.css\";\n\nclass ExampleTable extends PureComponent {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const _this$props = this.props,\n          columns = _this$props.columns,\n          dataSource = _this$props.dataSource,\n          titleText = _this$props.titleText,\n          onExpand = _this$props.onExpand;\n    return React.createElement(Table, {\n      title: () => titleText,\n      bordered: true,\n      columns: columns,\n      dataSource: dataSource,\n      pagination: false,\n      expandIconColumnIndex: 1,\n      onExpand: onExpand,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    });\n  }\n\n}\n\nlet rowSpanCount = [2, 2]; //マージされたカテゴリのデフォルト数\n\nlet expandedCache = {}; //展開状態と折りたたみ状態をキャッシュします\n\nlet columns = [\"1-1\", \"1-2\", \"1-3\"].map((item, index) => {\n  return {\n    title: item,\n    dataIndex: \"\" + index\n  };\n});\nlet data = [_objectSpread({\n  key: \"s0\",\n  //キーに基づいて行マージの数を決定します\n  type: \"Type1\",\n  source: \"Total\"\n}, [100, 200, 300]), _objectSpread({\n  key: \"dept1type1\",\n  type: \"Type1\",\n  source: \"Dep1\"\n}, [100, 200, 300], {\n  children: [{\n    key: \"expanddept1type1proxy\",\n    //キーに基づいて行マージの数を決定します\n    type: \"Type1\",\n    //タイプに従って展開と折りたたみを識別します。これは前のタイプと一致している必要があります\n    source: \"Vtuber\",\n    children: [_objectSpread({\n      key: \"expanddept1type1proxy1\",\n      //キーに基づいて行マージの数を決定します\n      type: \"Type1\",\n      source: \"あくあ\"\n    }, [50, 100, 150]), _objectSpread({\n      key: \"expanddept1type1proxy2\",\n      //キーに基づいて行マージの数を決定します\n      type: \"Type1\",\n      source: \"シオン\"\n    }, [50, 100, 150])]\n  }]\n}), _objectSpread({\n  key: \"s2\",\n  type: \"Type2\",\n  source: \"Total\"\n}, [100, 200, 300]), _objectSpread({\n  key: \"dept1type2\",\n  type: \"Type2\",\n  source: \"Dep1\"\n}, [100, 200, 300], {\n  children: [{\n    key: \"expanddept1type2proxy\",\n    //キーに基づいて行マージの数を決定します\n    type: \"Type2\",\n    //タイプに応じて展開と折りたたみを識別する\n    source: \"Vtuber\",\n    children: [_objectSpread({\n      key: \"expanddept1type2proxy1\",\n      //キーに基づいて行マージの数を決定します\n      type: \"Type2\",\n      source: \"あくあ\"\n    }, [50, 100, 150]), _objectSpread({\n      key: \"expanddept1type2proxy2\",\n      //キーに基づいて行マージの数を決定します\n      type: \"Type2\",\n      source: \"シオン\"\n    }, [50, 100, 150])]\n  }]\n})];\ncolumns.unshift({\n  title: \"Date\",\n  dataIndex: \"type\",\n  colSpan: 2,\n  render: (value, row, index) => {\n    const obj = {\n      children: value,\n      props: {}\n    };\n\n    if (row.key === \"s0\") {\n      obj.props.rowSpan = rowSpanCount[0];\n    } else if (row.key === \"s2\") {\n      obj.props.rowSpan = rowSpanCount[1];\n    } else {\n      obj.props.rowSpan = 0;\n    }\n\n    if (row.key.indexOf(\"expand\") > -1) {\n      obj.props.colSpan = 0;\n    }\n\n    return obj;\n  }\n}, {\n  title: \"\",\n  dataIndex: \"source\",\n  colSpan: 0\n}); //展開された行と折りたたまれた行のマージの数を制御します\n\nlet handleExpand = (expanded, record) => {\n  if (record.type === \"Type1\") {\n    if (expanded) {\n      rowSpanCount[0] += record.children.length; //展開する\n\n      record.expanded = true;\n\n      if (record.key.indexOf(\"proxy\") > -1) {\n        expandedCache[record.key] = true; //キャッシュ拡張ステータス\n      } //ステップごとに展開されているかどうかを判断し、次のレベルが展開されているかどうかを確認し、展開されている場合は、下位レベルの要素をマージします\n\n\n      if (expandedCache[\"expand\".concat(record.key, \"proxy\")] && record.children[0].children) {\n        rowSpanCount[0] += record.children[0].children.length;\n      }\n    } else {\n      rowSpanCount[0] -= record.children.length; //折りたたみます\n\n      record.expanded = false;\n\n      if (record.key.indexOf(\"proxy\") > -1) {\n        expandedCache[record.key] = false;\n      }\n\n      if (expandedCache[\"expand\" + record.key + \"proxy\"] && record.children[0].children) {\n        rowSpanCount[0] -= record.children[0].children.length;\n      }\n    }\n\n    let domE = document.getElementsByTagName(\"tr\");\n\n    for (let i = 0; i < domE.length; i++) {\n      let ele = domE[i].getAttribute(\"data-row-key\");\n\n      if (ele === \"s0\") {\n        domE[i].firstChild.setAttribute(\"rowSpan\", rowSpanCount[0]);\n      }\n    }\n  } else if (record.type === \"Type2\") {\n    if (expanded) {\n      rowSpanCount[1] += record.children.length; //展開する\n\n      record.expanded = true;\n\n      if (record.key.indexOf(\"proxy\") > -1) {\n        expandedCache[record.key] = true; //キャッシュ拡張ステータス\n      } //段階的に展開するかどうかを決定します\n\n\n      if (expandedCache[\"expand\".concat(record.key, \"proxy\")] && record.children[0].children) {\n        rowSpanCount[1] += record.children[0].children.length;\n      }\n    } else {\n      rowSpanCount[1] -= record.children.length; //折りたたみます\n\n      record.expanded = false;\n\n      if (record.key.indexOf(\"proxy\") > -1) {\n        expandedCache[record.key] = false;\n      }\n\n      if (expandedCache[\"expand\" + record.key + \"proxy\"] && record.children[0].children) {\n        rowSpanCount[1] -= record.children[0].children.length;\n      }\n    }\n\n    let domE = document.getElementsByTagName(\"tr\");\n\n    for (let i = 0; i < domE.length; i++) {\n      let ele = domE[i].getAttribute(\"data-row-key\");\n\n      if (ele === \"s2\") {\n        domE[i].firstChild.setAttribute(\"rowSpan\", rowSpanCount[1]);\n      }\n    }\n  }\n};\n\nfunction App() {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211\n    },\n    __self: this\n  }, React.createElement(ExampleTable, {\n    columns: columns,\n    dataSource: data,\n    titleText: \"DEMO\",\n    onExpand: handleExpand,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212\n    },\n    __self: this\n  }));\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 223\n  },\n  __self: this\n}), rootElement);","map":{"version":3,"sources":["/Users/raphtalia/workspace/react/antd/antd-tree/src/index.js"],"names":["React","PureComponent","ReactDOM","Table","ExampleTable","constructor","props","render","columns","dataSource","titleText","onExpand","rowSpanCount","expandedCache","map","item","index","title","dataIndex","data","key","type","source","children","unshift","colSpan","value","row","obj","rowSpan","indexOf","handleExpand","expanded","record","length","domE","document","getElementsByTagName","i","ele","getAttribute","firstChild","setAttribute","App","rootElement","getElementById"],"mappings":"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","sourcesContent":["import React, { PureComponent } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Table } from \"antd\";\nimport \"antd/dist/antd.css\";\n\nimport \"./styles.css\";\n\nclass ExampleTable extends PureComponent {\n  constructor(props) {\n    super(props);\n  }\n  render() {\n    const { columns, dataSource, titleText, onExpand } = this.props;\n    return (\n      <Table\n        title={() => titleText}\n        bordered={true}\n        columns={columns}\n        dataSource={dataSource}\n        pagination={false}\n        expandIconColumnIndex={1}\n        onExpand={onExpand}\n      />\n    );\n  }\n}\nlet rowSpanCount = [2, 2]; //マージされたカテゴリのデフォルト数\nlet expandedCache = {}; //展開状態と折りたたみ状態をキャッシュします\n\nlet columns = [\"1-1\", \"1-2\", \"1-3\"].map((item, index) => {\n  return {\n    title: item,\n    dataIndex: \"\" + index\n  };\n});\n\nlet data = [\n  {\n    key: \"s0\", //キーに基づいて行マージの数を決定します\n    type: \"Type1\",\n    source: \"Total\",\n    ...[100, 200, 300]\n  },\n  {\n    key: \"dept1type1\",\n    type: \"Type1\",\n    source: \"Dep1\",\n    ...[100, 200, 300],\n    children: [\n      {\n        key: \"expanddept1type1proxy\", //キーに基づいて行マージの数を決定します\n        type: \"Type1\", //タイプに従って展開と折りたたみを識別します。これは前のタイプと一致している必要があります\n        source: \"Vtuber\",\n        children: [\n          {\n            key: \"expanddept1type1proxy1\", //キーに基づいて行マージの数を決定します\n            type: \"Type1\",\n            source: \"あくあ\",\n            ...[50, 100, 150]\n          },\n          {\n            key: \"expanddept1type1proxy2\", //キーに基づいて行マージの数を決定します\n            type: \"Type1\",\n            source: \"シオン\",\n            ...[50, 100, 150]\n          }\n        ]\n      }\n    ]\n  },\n  {\n    key: \"s2\",\n    type: \"Type2\",\n    source: \"Total\",\n    ...[100, 200, 300]\n  },\n  {\n    key: \"dept1type2\",\n    type: \"Type2\",\n    source: \"Dep1\",\n    ...[100, 200, 300],\n    children: [\n      {\n        key: \"expanddept1type2proxy\", //キーに基づいて行マージの数を決定します\n        type: \"Type2\", //タイプに応じて展開と折りたたみを識別する\n        source: \"Vtuber\",\n        children: [\n          {\n            key: \"expanddept1type2proxy1\", //キーに基づいて行マージの数を決定します\n            type: \"Type2\",\n            source: \"あくあ\",\n            ...[50, 100, 150]\n          },\n          {\n            key: \"expanddept1type2proxy2\", //キーに基づいて行マージの数を決定します\n            type: \"Type2\",\n            source: \"シオン\",\n            ...[50, 100, 150]\n          }\n        ]\n      }\n    ]\n  }\n];\n\ncolumns.unshift(\n  {\n    title: \"Date\",\n    dataIndex: \"type\",\n    colSpan: 2,\n    render: (value, row, index) => {\n      const obj = {\n        children: value,\n        props: {}\n      };\n      if (row.key === \"s0\") {\n        obj.props.rowSpan = rowSpanCount[0];\n      } else if (row.key === \"s2\") {\n        obj.props.rowSpan = rowSpanCount[1];\n      } else {\n        obj.props.rowSpan = 0;\n      }\n      if (row.key.indexOf(\"expand\") > -1) {\n        obj.props.colSpan = 0;\n      }\n      return obj;\n    }\n  },\n  {\n    title: \"\",\n    dataIndex: \"source\",\n    colSpan: 0\n  }\n);\n\n//展開された行と折りたたまれた行のマージの数を制御します\nlet handleExpand = (expanded, record) => {\n  if (record.type === \"Type1\") {\n    if (expanded) {\n      rowSpanCount[0] += record.children.length; //展開する\n      record.expanded = true;\n      if (record.key.indexOf(\"proxy\") > -1) {\n        expandedCache[record.key] = true; //キャッシュ拡張ステータス\n      }\n      //ステップごとに展開されているかどうかを判断し、次のレベルが展開されているかどうかを確認し、展開されている場合は、下位レベルの要素をマージします\n      if (\n        expandedCache[`expand${record.key}proxy`] &&\n        record.children[0].children\n      ) {\n        rowSpanCount[0] += record.children[0].children.length;\n      }\n    } else {\n      rowSpanCount[0] -= record.children.length; //折りたたみます\n      record.expanded = false;\n      if (record.key.indexOf(\"proxy\") > -1) {\n        expandedCache[record.key] = false;\n      }\n      if (\n        expandedCache[\"expand\" + record.key + \"proxy\"] &&\n        record.children[0].children\n      ) {\n        rowSpanCount[0] -= record.children[0].children.length;\n      }\n    }\n    let domE = document.getElementsByTagName(\"tr\");\n    for (let i = 0; i < domE.length; i++) {\n      let ele = domE[i].getAttribute(\"data-row-key\");\n      if (ele === \"s0\") {\n        domE[i].firstChild.setAttribute(\"rowSpan\", rowSpanCount[0]);\n      }\n    }\n  } else if (record.type === \"Type2\") {\n    if (expanded) {\n      rowSpanCount[1] += record.children.length; //展開する\n      record.expanded = true;\n      if (record.key.indexOf(\"proxy\") > -1) {\n        expandedCache[record.key] = true; //キャッシュ拡張ステータス\n      }\n      //段階的に展開するかどうかを決定します\n      if (\n        expandedCache[`expand${record.key}proxy`] &&\n        record.children[0].children\n      ) {\n        rowSpanCount[1] += record.children[0].children.length;\n      }\n    } else {\n      rowSpanCount[1] -= record.children.length; //折りたたみます\n      record.expanded = false;\n      if (record.key.indexOf(\"proxy\") > -1) {\n        expandedCache[record.key] = false;\n      }\n      if (\n        expandedCache[\"expand\" + record.key + \"proxy\"] &&\n        record.children[0].children\n      ) {\n        rowSpanCount[1] -= record.children[0].children.length;\n      }\n    }\n    let domE = document.getElementsByTagName(\"tr\");\n    for (let i = 0; i < domE.length; i++) {\n      let ele = domE[i].getAttribute(\"data-row-key\");\n      if (ele === \"s2\") {\n        domE[i].firstChild.setAttribute(\"rowSpan\", rowSpanCount[1]);\n      }\n    }\n  }\n};\n\nfunction App() {\n  return (\n    <div>\n      <ExampleTable\n        columns={columns}\n        dataSource={data}\n        titleText={\"DEMO\"}\n        onExpand={handleExpand}\n      />\n    </div>\n  );\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"]},"metadata":{},"sourceType":"module"}